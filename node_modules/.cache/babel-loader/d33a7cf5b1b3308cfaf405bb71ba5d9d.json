{"ast":null,"code":"import _classCallCheck from \"/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/src/Camping/Camping.js\";\nimport React, { Component } from 'react';\nimport './Camping.css';\n\nvar Camping =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Camping, _Component);\n\n  function Camping(props) {\n    var _this;\n\n    _classCallCheck(this, Camping);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Camping).call(this, props));\n\n    _this.checkCampingLocation = function (props) {\n      console.log('hello');\n\n      var filteredCampground = _this.props.allCampgrounds.filter(function (campground) {\n        if (campground.location === _this.state.userCampInputValue) {\n          return campground;\n        }\n      });\n    };\n\n    _this.checkHikingLocation = function (props) {\n      var filteredHiking = _this.props.allTrails.filter(function (trail) {\n        if (trail.location === _this.state.userHikeInputValue) {\n          return trail;\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Camping, [{\n    key: \"render\",\n    //if camping:\n    //name\n    //location\n    //season\n    //if hiking:\n    //trail name\n    //location\n    //length\n    //method:\n    //EL: favorite button\n    //EL: visited button\n    //EL: delete button\n    //EL: more info button\n    //method:\n    //display popup\n    //method:\n    //save to local storage (info based on button pressed)\n    value: function render(props) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.userCampInputValue);\n    }\n  }]);\n\n  return Camping;\n}(Component);\n\nexport { Camping as default };","map":{"version":3,"sources":["/Users/kate/Desktop/Turing/Mod2/Whateverly-2019/src/Camping/Camping.js"],"names":["React","Component","Camping","props","checkCampingLocation","console","log","filteredCampground","allCampgrounds","filter","campground","location","state","userCampInputValue","checkHikingLocation","filteredHiking","allTrails","trail","userHikeInputValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;;IAEqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAQjBC,oBARiB,GAQM,UAACD,KAAD,EAAW;AAChCE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAIC,kBAAkB,GAAG,MAAKJ,KAAL,CAAWK,cAAX,CAA0BC,MAA1B,CAAiC,UAAAC,UAAU,EAAI;AACtE,YAAIA,UAAU,CAACC,QAAX,KAAwB,MAAKC,KAAL,CAAWC,kBAAvC,EAA2D;AACzD,iBAAOH,UAAP;AACD;AACF,OAJwB,CAAzB;AAKD,KAfgB;;AAAA,UAiBjBI,mBAjBiB,GAiBK,UAACX,KAAD,EAAW;AAC/B,UAAIY,cAAc,GAAG,MAAKZ,KAAL,CAAWa,SAAX,CAAqBP,MAArB,CAA4B,UAAAQ,KAAK,EAAI;AACxD,YAAIA,KAAK,CAACN,QAAN,KAAmB,MAAKC,KAAL,CAAWM,kBAAlC,EAAsD;AACpD,iBAAOD,KAAP;AACD;AACF,OAJoB,CAArB;AAKD,KAvBgB;;AAAA;AAOlB;;;;AAiBC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;2BAGMd,K,EAAO;AACb,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKA,KAAL,CAAWU,kBAAf,CADF;AAGD;;;;EAnDkCZ,S;;SAAhBC,O","sourcesContent":["import React, {Component} from 'react';\nimport './Camping.css';\n\nexport default class Camping extends Component {\n  constructor(props) {\n    super(props);\n\n\n\n\n\n  }\n    checkCampingLocation = (props) => {\n      console.log('hello');\n      let filteredCampground = this.props.allCampgrounds.filter(campground => {\n        if (campground.location === this.state.userCampInputValue) {\n          return campground\n        }\n      })\n    }\n\n    checkHikingLocation = (props) => {\n      let filteredHiking = this.props.allTrails.filter(trail => {\n        if (trail.location === this.state.userHikeInputValue) {\n          return trail\n        }\n      })\n    }\n    //if camping:\n    //name\n    //location\n    //season\n    //if hiking:\n    //trail name\n    //location\n    //length\n\n    //method:\n    //EL: favorite button\n    //EL: visited button\n    //EL: delete button\n    //EL: more info button\n\n    //method:\n    //display popup\n\n    //method:\n    //save to local storage (info based on button pressed)\n\n\n  render (props) {\n    return (\n      <p>{this.props.userCampInputValue}</p>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}