{"ast":null,"code":"import _classCallCheck from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/src/App/App.js\";\nimport React, { Component } from 'react'; // import {camping, trails} from '../Data/Data.js';\n\nimport './App.css';\nimport Start from '../Start/Start.js'; // import Card from './Card.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      camping: [],\n      trail: [] //const data =  passing in datafiles (data object)\n      //declare state\n      //can we use two states? Or need to combo dataset?\n      //states for start\n      //states for card\n      //states for filter buttons\n      //states for search\n      //states for storagebuttons\n      //ie: <Card entry={this.state.entry}/>\n      //method:\n      //toggle css hidden class/z-index\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/camping').then(function (response) {\n        return response.json();\n      }).then(function (selectCamping) {\n        _this2.setState({\n          camping: _this2.campCleanUpData(selectCamping)\n        });\n\n        console.log('Select Camping', selectCamping);\n      }).catch(function (error) {\n        return console.log('Camping Error', error);\n      });\n      fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/trails').then(function (response) {\n        return response.json();\n      }).then(function (selectHiking) {\n        _this2.setState({\n          trail: _this2.hikeCleanUpData(selectHiking)\n        });\n      }).catch(function (error) {\n        return console.log('Hiking Error', error);\n      });\n    }\n  }, {\n    key: \"campCleanUpData\",\n    value: function campCleanUpData(camping) {\n      console.log('Camping Test', camping);\n      var currentCampground;\n      camping.forEach(function (campground) {\n        return currentCampground = campground.location;\n      });\n      console.log('Current Campground', currentCampground);\n      var availCampgrounds = camping.filter(function (campground) {\n        if (currentCampground === campground.location) {\n          return campground;\n        }\n      });\n      return availCampgrounds;\n    } //  hikeCleanUpData(trails) {\n    //    console.log('Campground Test', campgrounds)\n    //   let newData;\n    //   const Dataset = campgrounds.reduce((accum, campground) => {\n    //     if(!accum[campground.location]) {\n    //       newData = accum[campground.location];\n    //       console.log('Test newData', newData)\n    //       let currentCampground = campground.location;\n    //     let availCampgrounds = campgrounds.filter(campground => {\n    //         if(currentCampground === campground.location) {\n    //             return campground;\n    //         }\n    //     });\n    //     let availTrails = trails.filter(trail => {\n    //         if(campground.location === trail.location) {\n    //             return trail;\n    //         }\n    //     });\n    //     newData = {\n    //         'campground': availCampgrounds,\n    //         'trail': availTrails\n    //         }\n    //     }\n    //   return accum\n    //   }, {});\n    //   console.log('Test Dataset', Dataset);\n    //   return newData\n    //  }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"startScreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Start, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/src/App/App.js"],"names":["React","Component","Start","App","state","camping","trail","fetch","then","response","json","selectCamping","setState","campCleanUpData","console","log","catch","error","selectHiking","hikeCleanUpData","currentCampground","forEach","campground","location","availCampgrounds","filter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;IAGqBC,G;;;;;AACnB,iBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAY;AACVC,MAAAA,OAAO,EAAC,EADE;AAEVC,MAAAA,KAAK,EAAE,EAFG,CAIZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAfY,KAAZ;AAHY;AAoBb;;;;wCACmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,sEAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,aAAa,EAAI;AACnB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAE,MAAI,CAACQ,eAAL,CAAqBF,aAArB;AADG,SAAd;;AAGFG,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,aAA9B;AACD,OAPH,EAQGK,KARH,CAQS,UAAAC,KAAK;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,KAA7B,CAAJ;AAAA,OARd;AAUEV,MAAAA,KAAK,CAAC,qEAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAU,YAAY,EAAI;AACpB,QAAA,MAAI,CAACN,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE,MAAI,CAACa,eAAL,CAAqBD,YAArB;AADK,SAAd;AAGH,OAND,EAOGF,KAPH,CAOS,UAAAC,KAAK;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,KAA5B,CAAJ;AAAA,OAPd;AAQF;;;oCAEeZ,O,EAAS;AACvBS,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,OAA5B;AACD,UAAIe,iBAAJ;AACEf,MAAAA,OAAO,CAACgB,OAAR,CAAgB,UAAAC,UAAU,EAAI;AAC5B,eAAOF,iBAAiB,GAAGE,UAAU,CAACC,QAAtC;AACD,OAFD;AAGET,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,iBAAlC;AAEF,UAAII,gBAAgB,GAAGnB,OAAO,CAACoB,MAAR,CAAe,UAAAH,UAAU,EAAI;AAChD,YAAGF,iBAAiB,KAAKE,UAAU,CAACC,QAApC,EAA8C;AAC1C,iBAAOD,UAAP;AACH;AACJ,OAJsB,CAAvB;AAMF,aAAOE,gBAAP;AACA,K,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AACP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADF;AAKD;;;;EAjG8BvB,S;;SAAZE,G","sourcesContent":["import React, {Component} from 'react';\n// import {camping, trails} from '../Data/Data.js';\nimport './App.css';\nimport Start from '../Start/Start.js';\n// import Card from './Card.js';\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state ={ \n      camping:[],\n      trail: []\n    }\n    //const data =  passing in datafiles (data object)\n    //declare state\n    //can we use two states? Or need to combo dataset?\n    //states for start\n    //states for card\n    //states for filter buttons\n    //states for search\n    //states for storagebuttons\n    //ie: <Card entry={this.state.entry}/>\n\n    //method:\n    //toggle css hidden class/z-index\n\n  }\n  componentDidMount() {\n    fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/camping')\n      .then(response => response.json()) \n      .then(selectCamping => {\n          this.setState({\t\t    \n            camping: this.campCleanUpData(selectCamping) \n        });\n        console.log('Select Camping', selectCamping);\t\n      })\n      .catch(error => console.log('Camping Error', error));\n  \n      fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/trails')\n        .then(response => response.json()) \n        .then(selectHiking => {\n          this.setState({\t\t\t\n            trail: this.hikeCleanUpData(selectHiking) \n        });\t\n      })\n        .catch(error => console.log('Hiking Error', error)); \t \n   }\n\n   campCleanUpData(camping) {\n     console.log('Camping Test', camping);\n    let currentCampground;\n      camping.forEach(campground => {\n        return currentCampground = campground.location\n      })\n        console.log('Current Campground', currentCampground);\n    \n      let availCampgrounds = camping.filter(campground => {\n          if(currentCampground === campground.location) {\n              return campground;\n          }\n      });\n\n    return availCampgrounds;\n   }\n\n  //  hikeCleanUpData(trails) {\n  //    console.log('Campground Test', campgrounds)\n  //   let newData;\n  //   const Dataset = campgrounds.reduce((accum, campground) => {\n  //     if(!accum[campground.location]) {\n  //       newData = accum[campground.location];\n  //       console.log('Test newData', newData)\n  //       let currentCampground = campground.location;\n    \n  //     let availCampgrounds = campgrounds.filter(campground => {\n  //         if(currentCampground === campground.location) {\n  //             return campground;\n  //         }\n  //     });\n  //     let availTrails = trails.filter(trail => {\n  //         if(campground.location === trail.location) {\n  //             return trail;\n  //         }\n  //     });\n    \n  //     newData = {\n  //         'campground': availCampgrounds,\n  //         'trail': availTrails\n  //         }\n  //     }\n  //   return accum\n  //   }, {});\n  //   console.log('Test Dataset', Dataset);\n  //   return newData\n  //  }\n\n  render() {\n    return (\n      <div className='startScreen'>\n       <Start/>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}