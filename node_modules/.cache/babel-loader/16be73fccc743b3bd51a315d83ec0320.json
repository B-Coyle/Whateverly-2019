{"ast":null,"code":"import _classCallCheck from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/src/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Start from '../Start/Start.js';\nimport Camping from '../Camping/Camping.js';\nimport Hiking from '../Hiking/Hiking.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.assignCampingBoolean = function () {\n      _this.setState({\n        camping: true\n      });\n    };\n\n    _this.checkCampingLocation = function (userCampInputValue) {\n      var filteredCampgrounds = _this.state.allCampgrounds.filter(function (campground) {\n        return campground.location === userCampInputValue || campground[\"nearest-city\"] === userCampInputValue;\n      });\n\n      _this.setState({\n        filteredCampground: filteredCampgrounds\n      });\n    };\n\n    _this.checkHikingLocation = function (userHikeInputValue) {\n      console.log('User Input Hike', userHikeInputValue);\n\n      var filteredHiking = _this.state.allTrails.filter(function (trail) {\n        return trail.location === userHikeInputValue || trail[\"nearest-city\"] === userHikeInputValue;\n      });\n\n      _this.setState({\n        filteredHiking: filteredHiking\n      });\n    };\n\n    _this.assignHikingBoolean = function () {\n      _this.setState({\n        hiking: true\n      });\n    };\n\n    _this.assignUserCampInput = function (startInputValue) {\n      _this.setState({\n        userCampInputValue: startInputValue\n      });\n    };\n\n    _this.assignUserHikeInput = function (startInputValue) {\n      _this.setState({\n        userHikeInputValue: startInputValue\n      });\n    };\n\n    _this.state = {\n      allCampgrounds: [],\n      allTrails: [],\n      userCampInputValue: '',\n      userHikeInputValue: '',\n      camping: false,\n      hiking: false,\n      filteredCampgrounds: [],\n      filteredHiking: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/camping').then(function (response) {\n        return response.json();\n      }).then(function (selectCamping) {\n        _this2.setState({\n          allCampgrounds: selectCamping.camping\n        });\n      }).catch(function (error) {\n        return console.log('Camping Error', error);\n      });\n      fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/trails').then(function (response) {\n        return response.json();\n      }).then(function (selectHiking) {\n        _this2.setState({\n          allTrails: selectHiking.trails\n        });\n      }).catch(function (error) {\n        return console.log('Hiking Error', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var toggleCards;\n\n      if (this.state.camping === true) {\n        toggleCards = React.createElement(Camping, {\n          allCampgrounds: this.state.allCampgrounds,\n          allTrails: this.state.allTrails,\n          assignedUserCampInput: this.state.userCampInputValue,\n          filteredCampgrounds: this.state.filteredCampground,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      } else if (this.state.hiking === true) {\n        toggleCards = React.createElement(Hiking, {\n          allCampgrounds: this.state.allCampgrounds,\n          allTrails: this.state.allTrails,\n          assignedUserHikeInput: this.state.userHikeInputValue,\n          filteredHiking: this.state.filteredHiking,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"startScreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Start, {\n        allCampgrounds: this.state.allCampgrounds,\n        allTrails: this.state.allTrails,\n        userCampInput: this.assignUserCampInput,\n        userHikeInput: this.assignUserHikeInput,\n        campingBoolean: this.assignCampingBoolean,\n        hikingBoolean: this.assignHikingBoolean,\n        filteredCampground: this.checkCampingLocation,\n        filteredHiking: this.checkHikingLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), toggleCards);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/emilydittmer/Desktop/Turing/Mod2/Whateverly-2019/src/App/App.js"],"names":["React","Component","Start","Camping","Hiking","App","assignCampingBoolean","setState","camping","checkCampingLocation","userCampInputValue","filteredCampgrounds","state","allCampgrounds","filter","campground","location","filteredCampground","checkHikingLocation","userHikeInputValue","console","log","filteredHiking","allTrails","trail","assignHikingBoolean","hiking","assignUserCampInput","startInputValue","assignUserHikeInput","fetch","then","response","json","selectCamping","catch","error","selectHiking","trails","toggleCards"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.scss';\nimport Start from '../Start/Start.js';\nimport Camping from '../Camping/Camping.js';\nimport Hiking from '../Hiking/Hiking.js'\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = { \n      allCampgrounds: [],\n      allTrails: [],\n      userCampInputValue: '',\n      userHikeInputValue: '',\n      camping: false,\n      hiking: false,\n      filteredCampgrounds: [],\n      filteredHiking: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/camping')\n      .then(response => response.json()) \n      .then(selectCamping => {\n          this.setState({\t\t    \n            allCampgrounds: selectCamping.camping \n        });\n      })\n      .catch(error => console.log('Camping Error', error));\n  \n      fetch('https://fe-apps.herokuapp.com/api/v1/whateverly/1901/b-coyle/trails')\n        .then(response => response.json()) \n        .then(selectHiking => {\n          this.setState({\t\t\t\n            allTrails: selectHiking.trails \n        });\t\n      })\n        .catch(error => console.log('Hiking Error', error)); \t \n   }\n\n   assignCampingBoolean = () => {\n    this.setState({\n      camping: true\n    })\n   }\n\n  checkCampingLocation = (userCampInputValue) => {\n    let filteredCampgrounds = this.state.allCampgrounds.filter(campground => campground.location === userCampInputValue || campground[\"nearest-city\"] === userCampInputValue)\n    this.setState ({\n      filteredCampground: filteredCampgrounds\n    })\n  }\n\n  checkHikingLocation = (userHikeInputValue) => {\n    console.log('User Input Hike', userHikeInputValue);\n    let filteredHiking = this.state.allTrails.filter(trail => trail.location === userHikeInputValue || trail[\"nearest-city\"] === userHikeInputValue)\n    this.setState ({\n      filteredHiking: filteredHiking\n    })\n  }\n\n\n   assignHikingBoolean = () => {\n     this.setState({\n       hiking: true\n     })\n  }\n\n   assignUserCampInput = (startInputValue) => {\n    this.setState ({\n      userCampInputValue: startInputValue\n    })\n  }\n\n  assignUserHikeInput = (startInputValue) => {\n    this.setState ({\n      userHikeInputValue: startInputValue\n    })\n  }\n \n  render() {\n    let toggleCards;\n\n    if(this.state.camping === true) {\n       toggleCards =  <Camping\n        allCampgrounds = {this.state.allCampgrounds}\n        allTrails = {this.state.allTrails} \n        assignedUserCampInput = {this.state.userCampInputValue}\n        filteredCampgrounds = {this.state.filteredCampground}\n   />\n    } else if (this.state.hiking === true) {\n        toggleCards = <Hiking\n        allCampgrounds = {this.state.allCampgrounds}\n        allTrails = {this.state.allTrails} \n        assignedUserHikeInput = {this.state.userHikeInputValue}\n        filteredHiking = {this.state.filteredHiking}\n    />\n    }\n\n    return (\n      <div className='startScreen'>\n       <Start\n       allCampgrounds = {this.state.allCampgrounds}\n       allTrails = {this.state.allTrails}\n       userCampInput = {this.assignUserCampInput}\n       userHikeInput = {this.assignUserHikeInput}\n       campingBoolean = {this.assignCampingBoolean}\n       hikingBoolean = {this.assignHikingBoolean}\n       filteredCampground = {this.checkCampingLocation}\n       filteredHiking = {this.checkHikingLocation}\n        />\n      {toggleCards}\n      </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}